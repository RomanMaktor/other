import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-user',
  templateUrl: './user.component.html',
  styleUrls: ['./user.component.css']
})

export class UserComponent implements OnInit {

  constructor() { 

  }
  
  ngOnInit() {

  }

  scalarVector () {
    
    // массив координат векторов n=3
    var arrayVectors= [[411,511,5,7,5,4,3,5,7,5], [4,5,2,7,59,4,3,5,7,5], [3,8,2,7,5,4,3,59,7,53], [3,8,2,7,5,4,3,5,7,5], [3,8,2,79,5,4,3,5,7,5], [3,89,2,755,5,4,3,5,7,5], [3,8,2,7,5,4,3,5,7,5], [3,8,2,7,5,4,3,5,7,5], [3,8,2,7,5,4,3,5,7,5], [3,8,2,7,5,4,3,5,7,5]] 
    
    var arrayTemp;  // временный массив результата перемножения каждой координаты во всех векторах 
    
    var scalarSum = 0;   // итоговая сумма, вначале нулевая

    var n1 = arrayVectors.length;    // определяем кол-во векторов  
    var n2 = arrayVectors[0].length; // определяем кол-во координат (берем из нулевого вектора)
    console.log(n1 + ' ' + n2);
    
    // первый цикл - по каждой координате векторов (x,y,z,....n), индексом координаты будет i
    var i = 0; 
    while (i < n2) { 

        var v=0; // обнуляем счетчик векторов
        
        // присвоим значение i координаты первого вектора, 
        // чтобы в следующем цикле накапливать перемноженную координату всех векторов
        arrayTemp = arrayVectors[v][i];   
        
        v++; // увеличим счетчик векторов +1 
            
              // запустим вложенный цикл по остальным векторам (1...n)
              while (v < n1) {
                    
                arrayTemp =  arrayTemp * arrayVectors[v][i]  // накапливаем перемноженную координату i
                v++; // увелививаем счетчик векторов +1
                
              }
      
        scalarSum = scalarSum + arrayTemp;  // накапливаем общую сумму 
        i++; // увелививаем счетчик координат +1
    }

    return scalarSum;  // возвращаем результат 
    }
}
